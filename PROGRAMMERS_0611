# database

#상품을 구매한 회원 비율 구하기

SELECT YEAR(OS.SALES_DATE) AS YEAR, MONTH(OS.SALES_DATE) AS MONTH ,COUNT(DISTINCT U.USER_ID)AS PUCHASED_USERS, 
ROUND((COUNT(DISTINCT U.USER_ID))/(SELECT DISTINCT(COUNT(USER_INFO.USER_ID))
                 FROM USER_INFO 
                 WHERE YEAR(USER_INFO.JOINED) ='2021'),1) AS PUCHASED_RATIO
FROM ONLINE_SALE OS
INNER JOIN USER_INFO U ON U.USER_ID = OS.USER_ID
WHERE YEAR(U.JOINED) = '2021'
GROUP BY YEAR, MONTH
ORDER BY YEAR, MONTH;

#DISTINCT(COUNT()) -> 중복된 행 제거 후 세기
#ROUNT(,) -> 반올림
#TURNCATE(,), -> 버림

#조건에 부합하는 중고거래 댓글 조회하기

SELECT B.TITLE, B.BOARD_ID, R.REPLY_ID, R.WRITER_ID, R.CONTENTS, DATE_FORMAT(R.CREATED_DATE,'%Y-%m-%d') AS CREATED_DATE
FROM USED_GOODS_BOARD B
INNER JOIN USED_GOODS_REPLY R ON R.BOARD_ID = B.BOARD_ID
WHERE B.CREATED_DATE LIKE '2022-10%'
ORDER BY R.CREATED_DATE, B.TITLE ASC 

#그룹별 조건에 맞는 식당 목록 출력하기

-- MEMBER_PROFILE와 REST_REVIEW 테이블에서 리뷰를 가장 많이 작성한 회원의 리뷰들을 조회하는 SQL문을 작성해주세요. 회원 이름, 리뷰 텍스트, 리뷰 작성일이 출력되도록 작성해주시고, 결과는 리뷰 작성일을 기준으로 오름차순, 리뷰 작성일이 같다면 리뷰 텍스트를 기준으로 오름차순 정렬해주세요.
SELECT MP.MEMBER_NAME,	RR.REVIEW_TEXT, DATE_FORMAT(RR.REVIEW_DATE,"%Y-%m-%d") AS REVIEW_DATE
FROM MEMBER_PROFILE MP
INNER JOIN REST_REVIEW RR ON RR.MEMBER_ID = MP.MEMBER_ID
WHERE RR.MEMBER_ID = (SELECT R2.MEMBER_ID 
                      FROM REST_REVIEW R2
                     GROUP BY R2.MEMBER_ID
                      ORDER BY COUNT(*) DESC
                      LIMIT 1
                     )
ORDER BY RR.REVIEW_DATE,RR.REVIEW_TEXT

#상품 별 오프라인 매출 구하기

SELECT  P.PRODUCT_CODE,SUM(P.PRICE*OFS.SALES_AMOUNT) AS SALES
FROM PRODUCT P
INNER JOIN OFFLINE_SALE OFS ON OFS.PRODUCT_ID =P.PRODUCT_ID
WHERE P.PRODUCT_ID = OFS.PRODUCT_ID
GROUP BY P.PRODUCT_CODE
ORDER BY SALES DESC, P.PRODUCT_CODE ASC;


# DISTINCT() -> 사용할 필요 없다. 이미 GROUP BY를 통해 묶어주었기 때문에


#조건에 부합하는 중고거래 상태 조회하기

SELECT BOARD_ID,WRITER_ID,TITLE,PRICE,CASE
    WHEN STATUS = 'SALE' THEN '판매중'
    WHEN STATUS = 'RESERVED' THEN '예약중'
    WHEN STATUS = 'DONE' THEN '거래완료'
    ELSE '알 수 없음' 
    END AS STATUS
FROM USED_GOODS_BOARD 
WHERE CREATED_DATE ='2022-10-05'
ORDER BY BOARD_ID DESC

#CASE WHEM THEN, ELSE, END AS 




